name: PyPI Release
on:
  push:
    branches: [main]
  release:
    types: [published]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest]
        python-version: ["3.9", "3.10"]

    runs-on: ${{ matrix.platform }}
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Upgrade setuptools and wheel
      run: |
        pip install --upgrade setuptools wheel

    - name: Install dependencies on Ubuntu
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install libopencv-dev -y

    - name: Install dependencies on macOS
      if: runner.os == 'macOS'
      run: |
        brew update
        brew install opencv

    - name: Install dependencies on Windows
      if: runner.os == 'Windows'
      run: |
        choco install opencv -y

    - name: Add requirements
      run: python -m pip install --upgrade setuptools wheel build

    - name: Install Python dependencies
      run: |
        pip install pytest
        pip install -r requirements.txt
        sudo apt-get update && sudo apt-get install ffmpeg libsm6 libxext6 -y

    - name: Build and install
      run: pip install .

    - name: Test
      run: python -m pytest

    - name: Build source distribution
      run: |
        python -m build --outdir dist/
        ls -lh dist/

    - uses: actions/upload-artifact@v3
      with:
        name: pypi-packages-${{ github.sha }}
        path: dist

    - name: Upload to GitHub Release
      if: github.event_name == 'release'
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./dist
        asset_name: my_package-${{ matrix.python-version }}-${{ github.sha }}.whl
        asset_content_type: application/zip
